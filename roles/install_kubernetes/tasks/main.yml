---

# TODO hold versions
# - name: Hold containerd.io upgrades
#   dpkg_selections:
#     name: containerd.io
#     selection: hold


- name: set SystemdCgroup to true
  replace:
    path: /etc/containerd/config.toml
    regexp: '(SystemdCgroup = false)'
    replace: 'SystemdCgroup = true'

# TODO calls for restart of containerd  - move to install containerd
# TODO restart containerd

- name: uninstall dphys-swapfile
  apt:
    name: dphys-swapfile
    state: absent

- name: check for swap
  command: swapon -s
  register: swap_present
  changed_when: False

- name: turn off swap
  command: dphys-swapfile swapoff
  when: swap_present.stdout != ""

- name: disable swap at boot
  service:
    name: dphys-swapfile
    enabled: no
  when: swap_present.stdout != ""

- name: update the cache if older than 6 hours
  apt:
    cache_valid_time: 21600

- name: install kube pre-requsites
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    state: present

- name: add apt signing key for kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: add kubernetes repo
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present

# TODO only if repo was added
- name: update the cache
  apt:
   update_cache: yes

- name: install kubeadm, kubelet, and kubectl
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - kubeadm={{ kubeadm_version }}
    - kubelet={{ kubelet_version }}
    - kubectl={{ kubectl_version }}
    state: present

- name: set raspberry pi boot parameters for cgroup_memory
  copy:
    dest: /boot/firmware/cmdline.txt
    content: >-
      elevator=deadline net.ifnames=0 console=serial0,115200
      dwc_otg.lpm_enable=0 console=tty1 root=LABEL=writable
      rootfstype=ext4 rootwait fixrtc quiet splash
      cgroup_enable=memory cgroup_memory=1

  # TODO register a reboot
  # TODO hold versions

- name: set modules
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
  # TODO register a reboot


- name: configure iptables
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1

  # TODO register a reboot
